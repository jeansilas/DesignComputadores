tmp(0)  := RCA & JSR & "000000010";  
tmp(1)  := RCA & JMP & "000110010";  
tmp(2)  := RCZ & LDI & "000000000";      -- Registrador com zero 
tmp(3)  := RCZ & STA & "111111111";      -- Reseta o KEY0 
tmp(4)  := RCZ & STA & "111111110";      -- Reseta o KEY 1 
tmp(5)  := RCZ & STA & "000000000";      -- Constante 0 
tmp(6)  := RCA & LDI & "000000001";  
tmp(7)  := RCA & STA & "000000001";      -- Constante 1 
tmp(8)  := RCA & LDI & "000000010";      -- Constante 2 
tmp(9)  := RCA & STA & "000000010";  
tmp(10)  := RCA & LDI & "000000011";      -- Constante 3 
tmp(11)  := RCA & STA & "000000011";  
tmp(12)  := RCA & LDI & "000000100";      -- Constante 4 
tmp(13)  := RCA & STA & "000000100";  
tmp(14)  := RCA & LDI & "000000110";      -- Constante 6 
tmp(15)  := RCA & STA & "000000110";  
tmp(16)  := RCA & LDI & "000001010";  
tmp(17)  := RCA & STA & "000001010";      -- Constante 10 
tmp(18)  := RCA & LDI & "000001001";  
tmp(19)  := RCA & STA & "000001001";      -- Constante 9 
tmp(20)  := RCA & LDI & "000001111";      -- Constante 15 : Mascara para SW 
tmp(21)  := RCA & STA & "000001011";  
tmp(22)  := RCZ & STA & "100100000";      -- Limpa HEX0 
tmp(23)  := RCZ & STA & "100100001";      -- Limpa HEX1 
tmp(24)  := RCZ & STA & "100100010";      -- Limpa HEX2 
tmp(25)  := RCZ & STA & "100100011";      -- Limpa HEX3 
tmp(26)  := RCZ & STA & "100100100";      -- Limpa HEX4 
tmp(27)  := RCZ & STA & "100100101";      -- Limpa HEX5 
tmp(28)  := RCZ & STA & "100000000";      -- Limpa LEDR0~LEDR7 
tmp(29)  := RCZ & STA & "100000001";      -- Limpa LEDR8 
tmp(30)  := RCZ & STA & "100000010";      -- Limpa LEDR9 
tmp(31)  := RUS & LDI & "000000000";      -- Inicializa o Valor das unidades de segundos 
tmp(32)  := RDS & LDI & "000000000";      -- Inicializa o Valor das dezenas de segundos 
tmp(33)  := RUM & LDI & "000000000";      -- Inicializa o Valor das unidades de minutos 
tmp(34)  := RDM & LDI & "000000000";      -- Inicializa o Valor das dezenas de minutos 
tmp(35)  := RUH & LDI & "000000000";      -- Inicializa o Valor das unidades de horas 
tmp(36)  := RDH & LDI & "000000000";      -- Inicializa o Valor das dezenas de horas 
tmp(37)  := RCA & LDI & "000001010";  
tmp(38)  := RCA & STA & "000001101";      -- Limite para o Valor das unidades de segundos 
tmp(39)  := RCA & STA & "000001110";      -- Limite para o Valor das dezenas de segundos 
tmp(40)  := RCA & STA & "000001111";      -- Limite para o Valor das unidades de minutos 
tmp(41)  := RCA & STA & "000010000";      -- Limite para o Valor das dezenas de minutos 
tmp(42)  := RCA & STA & "000010001";      -- Limite para o Valor das unidades de horas 
tmp(43)  := RCA & STA & "000010010";      -- Limite para o Valor das dezenas de horas 
tmp(44)  := RCZ & STA & "000001000";      -- Limpa a Flag de limite 
tmp(45)  := RCZ & STA & "000001100";      -- Limpa a Flag de Overflow(carry_out) 
tmp(46)  := RCZ & STA & "000011011";      -- Inicializa o valor para lidar com formato de hora 
tmp(47)  := RCZ & STA & "000011100";      -- Inicializa o valor para lidar com limite de 24 Horas 
tmp(48)  := RCZ & STA & "000011101";      -- 1 -> ajusta horário; 0 -> Limite incremento 
tmp(49)  := RCZ & RET & "000000000";  
tmp(50)  := RCA & LDA & "101100000";      -- Carrega o acumulador com a leitura do botão KEY0 
tmp(51)  := RCA & ANDI & "000000001";  
tmp(52)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY0 com a constante 1 MEM[1] 
tmp(53)  := RCA & JEQ & "001000101";  
tmp(54)  := RCA & JSR & "010001101";  
tmp(55)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(56)  := RCA & ANDI & "000000001";      -- Aplica mascara 
tmp(57)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(58)  := RCA & JEQ & "001001001";  
tmp(59)  := RCA & JSR & "010100000";  
tmp(60)  := RCA & LDA & "101100100";      -- Carrega o acumulador com a leitura do botão FPGA_RESET 
tmp(61)  := RCA & ANDI & "000000001";      -- Aplica mascara 
tmp(62)  := RCA & CEQ & "000000001";      -- Compara a leitura de FPGA_RESET com a constante 1 MEM[1] 
tmp(63)  := RCA & JEQ & "001000111";  
tmp(64)  := RCA & LDA & "101100010";      -- Carrega o acumulador com a leitura do botão KEY2 
tmp(65)  := RCA & ANDI & "000000001";      -- Aplica mascara 
tmp(66)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY2 com a constante 1 MEM[1] 
tmp(67)  := RCA & JEQ & "001001011";  
tmp(68)  := RCA & JMP & "000110010";  
tmp(69)  := RCA & JSR & "001001111";  
tmp(70)  := RCA & JMP & "000110110";  
tmp(71)  := RCA & JSR & "010010100";  
tmp(72)  := RCA & JMP & "001000000";  
tmp(73)  := RCA & JSR & "010101111";  
tmp(74)  := RCA & JMP & "000111011";  
tmp(75)  := RCA & LDI & "000000001";  
tmp(76)  := RCA & STA & "000011101";  
tmp(77)  := RCA & JSR & "010101111";  
tmp(78)  := RCA & JMP & "001000100";  
tmp(79)  := RCA & STA & "111111111";  
tmp(80)  := RCA & LDA & "000001000";  
tmp(81)  := RCA & CEQ & "000000001";  
tmp(82)  := RCA & JEQ & "001010100";      -- Verifica o carry out (limite) 
tmp(83)  := RCA & JMP & "001011011";  
tmp(84)  := RCA & LDA & "000011101";  
tmp(85)  := RCA & CEQ & "000000001";  
tmp(86)  := RCA & JEQ & "001011011";  
tmp(87)  := RCA & LDI & "000000001";  
tmp(88)  := RCA & STA & "100000001";      -- Acende o Led de Limite (alarm) 
tmp(89)  := RCA & STA & "000011101";  
tmp(90)  := RCA & JMP & "001011101";  
tmp(91)  := RCZ & STA & "100000001";      -- Apaga o Led de limite (alarm) 
tmp(92)  := RCZ & STA & "000011101";  
tmp(93)  := RUS & ADDI & "000000001";  
tmp(94)  := RUS & CEQ & "000001010";  
tmp(95)  := RCA & JEQ & "001100001";      -- Verifica as unidades de segundos 
tmp(96)  := RCA & JMP & "010001100";  
tmp(97)  := RUS & LDI & "000000000";  
tmp(98)  := RDS & ADDI & "000000001";  
tmp(99)  := RDS & CEQ & "000000110";  
tmp(100)  := RCA & JEQ & "001100110";      -- Verifica as dezenas de segundos 
tmp(101)  := RCA & JMP & "010001100";  
tmp(102)  := RDS & LDI & "000000000";  
tmp(103)  := RUM & ADDi & "000000001";  
tmp(104)  := RUM & CEQ & "000001010";  
tmp(105)  := RCA & JEQ & "001101011";      -- Verifica as unidades de minutos 
tmp(106)  := RCA & JMP & "010001100";  
tmp(107)  := RUM & LDI & "000000000";  
tmp(108)  := RDM & ADDi & "000000001";  
tmp(109)  := RDM & CEQ & "000000110";  
tmp(110)  := RCA & JEQ & "001110000";      -- Verifica as dezenas de minutos 
tmp(111)  := RCA & JMP & "010001100";  
tmp(112)  := RDM & LDI & "000000000";  
tmp(113)  := RUH & ADDI & "000000001";  
tmp(114)  := RUH & CEQ & "000000100";  
tmp(115)  := RCA & JEQ & "001110101";  
tmp(116)  := RCA & JMP & "001111010";  
tmp(117)  := RCA & LDA & "000011011";  
tmp(118)  := RCA & ADDI & "000000001";  
tmp(119)  := RCA & STA & "000011011";  
tmp(120)  := RCA & CEQ & "000000011";  
tmp(121)  := RCA & JEQ & "010000010";  
tmp(122)  := RUH & CEQ & "000001010";  
tmp(123)  := RCA & JEQ & "001111101";      -- Verifica as unidades de horas 
tmp(124)  := RCA & JMP & "010001100";  
tmp(125)  := RUH & LDI & "000000000";  
tmp(126)  := RDH & ADDI & "000000001";  
tmp(127)  := RDH & CEQ & "000000011";  
tmp(128)  := RCA & JEQ & "010000010";      -- Verifica  a dezena das horas 
tmp(129)  := RCA & JMP & "010001100";  
tmp(130)  := RCA & LDI & "000000001";  
tmp(131)  := RCA & STA & "100000010";      -- Ativa o LED de OVERLFOW 
tmp(132)  := RCA & STA & "000001100";      -- Ativa a Flag de OVERFLOW 
tmp(133)  := RUS & LDI & "000000000";      -- Mantem os valore das unidades de segundos em 9 
tmp(134)  := RDS & LDI & "000000000";      -- Mantem os valore das dezenas de segundos 5 
tmp(135)  := RUM & LDI & "000000000";      -- Mantem os valore das unidades de minutos em 9 
tmp(136)  := RDM & LDI & "000000000";      -- Mantem os valore das dezenas de minutos em 5 
tmp(137)  := RUH & LDI & "000000000";      -- Mantem os valore das unidades de horas em 3 
tmp(138)  := RDH & LDI & "000000000";      -- Mantem os valore das dezenas em 2 
tmp(139)  := RCZ & STA & "000011011";  
tmp(140)  := RCZ & RET & "000000000";  
tmp(141)  := RUS & STA & "100100000";      -- Escreve o valor das unidades de segundos 
tmp(142)  := RDS & STA & "100100001";      -- Escreve o valor das dezenas de segundos 
tmp(143)  := RUM & STA & "100100010";      -- Escreve o valor das unidades de minutos 
tmp(144)  := RDM & STA & "100100011";      -- Escreve o valor das dezenas de minutos 
tmp(145)  := RUH & STA & "100100100";      -- Escreve o valor das unidades de horas 
tmp(146)  := RDH & STA & "100100101";      -- Escreve o valor das dezenas de horas 
tmp(147)  := RDH & RET & "000000000";  
tmp(148)  := RUS & LDI & "000000000";      -- Reinicia os valores das unidades de segundos em 9 
tmp(149)  := RDS & LDI & "000000000";      -- Renicia os valores das dezenas de segundos 5 
tmp(150)  := RUM & LDI & "000000000";      -- Reinicia os valores das unidades de minutos em 9 
tmp(151)  := RDM & LDI & "000000000";      -- Reinicia os valores das dezenas de minutos em 5 
tmp(152)  := RUH & LDI & "000000000";      -- Reinicia os valores das unidades de horas em 3 
tmp(153)  := RDH & LDI & "000000000";      -- Reinicia os valores das dezenas de horas em 2 
tmp(154)  := RCZ & STA & "000001000";      -- Reinicia a Flag de Limite 
tmp(155)  := RCZ & STA & "000001100";      -- Reinicia a Falg de Overflow(carry_out) 
tmp(156)  := RCZ & STA & "100000001";      -- Apaga o Led de Limite 
tmp(157)  := RCZ & STA & "100000010";      -- Apaga o Led de Overflow 
tmp(158)  := RCZ & STA & "000011011";      -- Reinicia a contagem de formato 24 
tmp(159)  := RCZ & RET & "000000000";  
tmp(160)  := RUS & CLT & "000001101";  
tmp(161)  := RCA & JLT & "010101110";      -- Verifica as unidades de segundos 
tmp(162)  := RDS & CLT & "000001110";  
tmp(163)  := RCA & JLT & "010101110";      -- Verifica as dezenas de segundos 
tmp(164)  := RUM & CLT & "000001111";  
tmp(165)  := RCA & JLT & "010101110";      -- Verifica as unidades de minutos 
tmp(166)  := RDM & CLT & "000010000";  
tmp(167)  := RCA & JLT & "010101110";      -- Verifica as dezenas de minutos 
tmp(168)  := RUH & CLT & "000010001";  
tmp(169)  := RCA & JLT & "010101110";      -- Verifica as unidades de horas 
tmp(170)  := RDH & CLT & "000010010";  
tmp(171)  := RCA & JLT & "010101110";      -- Verifica as dezenas de hpras 
tmp(172)  := RCA & LDI & "000000001";  
tmp(173)  := RCA & STA & "000001000";      -- Flag de Limite 
tmp(174)  := RCA & RET & "000000000";  
tmp(175)  := RCZ & STA & "100100000";      -- Limpa HEX0 
tmp(176)  := RCZ & STA & "100100001";      -- Limpa HEX1 
tmp(177)  := RCZ & STA & "100100010";      -- Limpa HEX2 
tmp(178)  := RCZ & STA & "100100011";      -- Limpa HEX3 
tmp(179)  := RCZ & STA & "100100100";      -- Limpa HEX4 
tmp(180)  := RCZ & STA & "100100101";      -- Limpa HEX5 
tmp(181)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(182)  := RCA & LDI & "000100000";  
tmp(183)  := RCA & STA & "100000000";      -- Liga o LEDR5 
tmp(184)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(185)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(186)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(187)  := RCA & JEQ & "011000011";  
tmp(188)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(189)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(190)  := RCA & CLT & "000000011";  
tmp(191)  := RCA & JLT & "011000001";  
tmp(192)  := RCA & LDI & "000000010";  
tmp(193)  := RCA & STA & "100100101";  
tmp(194)  := RCA & JMP & "010111000";  
tmp(195)  := RCA & LDA & "000011101";  
tmp(196)  := RCA & CEQ & "000000001";  
tmp(197)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(198)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(199)  := RCA & STA & "000011110";  
tmp(200)  := RCA & CLT & "000000011";  
tmp(201)  := RCA & JLT & "011001110";  
tmp(202)  := RCA & LDI & "000000001";  
tmp(203)  := RCA & STA & "000011100";  
tmp(204)  := RCA & LDI & "000000010";      -- Guarda o Limite das dezenas de horas 
tmp(205)  := RCA & STA & "000011110";  
tmp(206)  := RCA & JEQ & "011010001";  
tmp(207)  := RCA & STA & "000010010";  
tmp(208)  := RCA & JMP & "011010010";  
tmp(209)  := RDH & LDA & "000011110";  
tmp(210)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(211)  := RCA & LDI & "000010000";  
tmp(212)  := RCA & STA & "100000000";      -- Liga o LEDR4 
tmp(213)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(214)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(215)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(216)  := RCA & JEQ & "011101011";  
tmp(217)  := RCA & LDA & "000011100";  
tmp(218)  := RCA & CEQ & "000000001";  
tmp(219)  := RCA & JEQ & "011100100";  
tmp(220)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(221)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(222)  := RCA & CLT & "000001010";  
tmp(223)  := RCA & JLT & "011100001";  
tmp(224)  := RCA & LDI & "000001001";  
tmp(225)  := RCA & STA & "100100100";  
tmp(226)  := RCA & JMP & "011101010";  
tmp(227)  := RCA & JMP & "011101001";  
tmp(228)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(229)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(230)  := RCA & CLT & "000000100";  
tmp(231)  := RCA & JLT & "011101001";  
tmp(232)  := RCA & LDI & "000000011";  
tmp(233)  := RCA & STA & "100100100";  
tmp(234)  := RCA & JMP & "011010101";  
tmp(235)  := RCA & LDA & "000011100";  
tmp(236)  := RCA & CEQ & "000000001";  
tmp(237)  := RCA & JEQ & "011111000";  
tmp(238)  := RCA & LDA & "000011101";  
tmp(239)  := RCA & CEQ & "000000001";  
tmp(240)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(241)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(242)  := RCA & STA & "000011110";  
tmp(243)  := RCA & CLT & "000001010";  
tmp(244)  := RCA & JLT & "100000001";  
tmp(245)  := RCA & LDI & "000001001";  
tmp(246)  := RCA & STA & "000011110";  
tmp(247)  := RCA & JMP & "100000001";  
tmp(248)  := RCA & LDA & "000011101";  
tmp(249)  := RCA & CEQ & "000000001";  
tmp(250)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(251)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(252)  := RCA & STA & "000011110";  
tmp(253)  := RCA & CLT & "000000100";  
tmp(254)  := RCA & JLT & "100000001";  
tmp(255)  := RCA & LDI & "000000011";  
tmp(256)  := RCA & STA & "000011110";  
tmp(257)  := RCA & JEQ & "100000100";  
tmp(258)  := RCA & STA & "000010001";  
tmp(259)  := RCA & JMP & "100000101";  
tmp(260)  := RUH & LDA & "000011110";  
tmp(261)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(262)  := RCA & LDI & "000001000";  
tmp(263)  := RCA & STA & "100000000";      -- Liga o LEDR3 
tmp(264)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(265)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(266)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(267)  := RCA & JEQ & "100010100";  
tmp(268)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(269)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(270)  := RCA & CLT & "000000110";  
tmp(271)  := RCA & JLT & "100010010";  
tmp(272)  := RCA & LDI & "000000101";  
tmp(273)  := RCA & STA & "100100011";  
tmp(274)  := RCA & STA & "100100011";  
tmp(275)  := RCA & JMP & "100001000";  
tmp(276)  := RCA & LDA & "000011101";  
tmp(277)  := RCA & CEQ & "000000001";  
tmp(278)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(279)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(280)  := RCA & STA & "000011110";  
tmp(281)  := RCA & CLT & "000000110";  
tmp(282)  := RCA & JLT & "100011101";  
tmp(283)  := RCA & LDI & "000000101";  
tmp(284)  := RCA & STA & "000011110";  
tmp(285)  := RCA & JEQ & "100100000";  
tmp(286)  := RCA & STA & "000010000";  
tmp(287)  := RCA & JMP & "100100001";  
tmp(288)  := RDM & LDA & "000011110";  
tmp(289)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(290)  := RCA & LDI & "000000100";  
tmp(291)  := RCA & STA & "100000000";      -- Liga o LEDR2 
tmp(292)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(293)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(294)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(295)  := RCA & JEQ & "100110000";  
tmp(296)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(297)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(298)  := RCA & CLT & "000001010";  
tmp(299)  := RCA & JLT & "100101110";  
tmp(300)  := RCA & LDI & "000001001";  
tmp(301)  := RCA & STA & "100100010";  
tmp(302)  := RCA & STA & "100100010";  
tmp(303)  := RCA & JMP & "100100100";  
tmp(304)  := RCA & LDA & "000011101";  
tmp(305)  := RCA & CEQ & "000000001";  
tmp(306)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(307)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(308)  := RCA & STA & "000011110";  
tmp(309)  := RCA & CLT & "000001010";  
tmp(310)  := RCA & JLT & "100111001";  
tmp(311)  := RCA & LDI & "000001001";  
tmp(312)  := RCA & STA & "000011110";  
tmp(313)  := RCA & JEQ & "100111100";  
tmp(314)  := RCA & STA & "000001111";  
tmp(315)  := RCA & JMP & "100111101";  
tmp(316)  := RUM & LDA & "000011110";  
tmp(317)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(318)  := RCA & LDI & "000000010";  
tmp(319)  := RCA & STA & "100000000";      -- Liga o LEDR1 
tmp(320)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(321)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(322)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(323)  := RCA & JEQ & "101001100";  
tmp(324)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(325)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(326)  := RCA & CLT & "000000110";  
tmp(327)  := RCA & JLT & "101001010";  
tmp(328)  := RCA & LDI & "000000101";  
tmp(329)  := RCA & STA & "100100001";  
tmp(330)  := RCA & STA & "100100001";  
tmp(331)  := RCA & JMP & "101000000";  
tmp(332)  := RCA & LDA & "000011101";  
tmp(333)  := RCA & CEQ & "000000001";  
tmp(334)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(335)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(336)  := RCA & STA & "000011110";  
tmp(337)  := RCA & CLT & "000000110";  
tmp(338)  := RCA & JLT & "101010101";  
tmp(339)  := RCA & LDI & "000000101";  
tmp(340)  := RCA & STA & "000011110";  
tmp(341)  := RCA & JEQ & "101011000";  
tmp(342)  := RCA & STA & "000001110";  
tmp(343)  := RCA & JMP & "101011001";  
tmp(344)  := RDS & LDA & "000011110";  
tmp(345)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(346)  := RCA & LDI & "000000001";  
tmp(347)  := RCA & STA & "100000000";      -- Liga o LEDR0 
tmp(348)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(349)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(350)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(351)  := RCA & JEQ & "101101000";  
tmp(352)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(353)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(354)  := RCA & CLT & "000001010";  
tmp(355)  := RCA & JLT & "101100110";  
tmp(356)  := RCA & LDI & "000001001";  
tmp(357)  := RCA & STA & "100100000";  
tmp(358)  := RCA & STA & "100100000";  
tmp(359)  := RCA & JMP & "101011100";  
tmp(360)  := RCA & LDA & "000011101";  
tmp(361)  := RCA & CEQ & "000000001";  
tmp(362)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(363)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(364)  := RCA & STA & "000011110";  
tmp(365)  := RCA & CLT & "000001010";  
tmp(366)  := RCA & JLT & "101110001";  
tmp(367)  := RCA & LDI & "000001001";  
tmp(368)  := RCA & STA & "000011110";  
tmp(369)  := RCA & STA & "000001101";  
tmp(370)  := RCA & JEQ & "101110100";  
tmp(371)  := RCA & JMP & "101110101";  
tmp(372)  := RUS & LDA & "000011110";  
tmp(373)  := RCA & LDA & "000011101";  
tmp(374)  := RCA & CEQ & "000000001";  
tmp(375)  := RCA & JEQ & "101111001";  
tmp(376)  := RCA & JMP & "110001010";  
tmp(377)  := RDH & CEQ & "000000010";  
tmp(378)  := RCA & LDI & "000000010";  
tmp(379)  := RCA & JEQ & "110001010";  
tmp(380)  := RDH & CEQ & "000000001";  
tmp(381)  := RCA & JEQ & "101111111";  
tmp(382)  := RCA & JMP & "110000101";  
tmp(383)  := RUH & CLT & "000000100";  
tmp(384)  := RCA & JLT & "110000011";  
tmp(385)  := RCA & LDI & "000000010";  
tmp(386)  := RCA & JMP & "110001010";  
tmp(387)  := RCA & LDI & "000000001";  
tmp(388)  := RCA & JMP & "110001010";  
tmp(389)  := RUH & CLT & "000000100";  
tmp(390)  := RCA & JLT & "110001001";  
tmp(391)  := RCA & LDI & "000000001";  
tmp(392)  := RCA & JMP & "110001010";  
tmp(393)  := RCA & LDI & "000000000";  
tmp(394)  := RCA & STA & "000011011";  
tmp(395)  := RCZ & STA & "100100000";      -- Limpa o HEX0 
tmp(396)  := RCZ & STA & "100100001";      -- Limpa o HEX1 
tmp(397)  := RCZ & STA & "100100001";      -- Limpa o HEX2 
tmp(398)  := RCZ & STA & "100100010";      -- Limpa o HEX3 
tmp(399)  := RCZ & STA & "100100011";      -- Limpa o HEX4 
tmp(400)  := RCZ & STA & "100000000";      -- Limpa o HEX5 
tmp(401)  := RCZ & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(402)  := RCZ & STA & "111111101";      -- Limpa a leitura do KEY2 
tmp(403)  := RCZ & STA & "000011100";  
tmp(404)  := RCZ & STA & "000011101";  
tmp(405)  := RCZ & RET & "000000000";  
return tmp;