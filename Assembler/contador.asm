tmp(0)  := RCA & JSR & "000000010";  
tmp(1)  := RCA & JMP & "000101010";  
tmp(2)  := RCA & LDI & "000000000";  
tmp(3)  := RCA & STA & "111111111";      -- Reseta o KEY0 
tmp(4)  := RCA & STA & "111111110";      -- Reseta o KEY 1 
tmp(5)  := RCA & LDI & "000000000";  
tmp(6)  := RCA & STA & "000000000";      -- Constante 0 
tmp(7)  := RCA & LDI & "000000001";  
tmp(8)  := RCA & STA & "000000001";      -- Constante 1 
tmp(9)  := RCA & LDI & "000001010";  
tmp(10)  := RCA & STA & "000001010";      -- Constante 10 
tmp(11)  := RCA & LDI & "000001001";  
tmp(12)  := RCA & STA & "000001001";      -- Constante 9 
tmp(13)  := RCA & LDI & "000001111";      -- Constante 15 : Mascara para SW 
tmp(14)  := RCA & STA & "000001011";  
tmp(15)  := RCA & LDA & "000000000";      -- Carrega o acumulador com o valor 0 
tmp(16)  := RCA & STA & "100100000";      -- Limpa HEX0 
tmp(17)  := RCA & STA & "100100001";      -- Limpa HEX1 
tmp(18)  := RCA & STA & "100100010";      -- Limpa HEX2 
tmp(19)  := RCA & STA & "100100011";      -- Limpa HEX3 
tmp(20)  := RCA & STA & "100100100";      -- Limpa HEX4 
tmp(21)  := RCA & STA & "100100101";      -- Limpa HEX5 
tmp(22)  := RCA & STA & "100000000";      -- Limpa LEDR0~LEDR7 
tmp(23)  := RCA & STA & "100000001";      -- Limpa LEDR8 
tmp(24)  := RCA & STA & "100000010";      -- Limpa LEDR9 
tmp(25)  := RCA & STA & "000000010";      -- Inicializa o Valor das unidades 
tmp(26)  := RCA & STA & "000000011";      -- Inicializa o Valor das dezenas 
tmp(27)  := RCA & STA & "000000100";      -- Inicializa o Valor das centenas 
tmp(28)  := RCA & STA & "000000101";      -- Inicializa o Valor das unidade de milhares 
tmp(29)  := RCA & STA & "000000110";      -- Inicializa o Valor das dezenas de milhares 
tmp(30)  := RCA & STA & "000000111";      -- Inicializa o Valor das centenas de milhares 
tmp(31)  := RCA & LDI & "000001010";  
tmp(32)  := RCA & STA & "000001101";      -- Limite para o Valor das unidades 
tmp(33)  := RCA & STA & "000001110";      -- Limite para o Valor das dezenas 
tmp(34)  := RCA & STA & "000001111";      -- Limite para o Valor das centenas 
tmp(35)  := RCA & STA & "000010000";      -- Limite para o Valor das unidade de milhares 
tmp(36)  := RCA & STA & "000010001";      -- Limite para o Valor das dezenas de milhares 
tmp(37)  := RCA & STA & "000010010";      -- Limite para o Valor das centenas de milhares 
tmp(38)  := RCA & LDI & "000000000";  
tmp(39)  := RCA & STA & "000001000";      -- Limpa a Flag de limite 
tmp(40)  := RCA & STA & "000001100";      -- Limpa a Flag de Overflow(carry_out) 
tmp(41)  := RCA & RET & "000000000";  
tmp(42)  := RCA & LDA & "101100000";      -- Carrega o acumulador com a leitura do botão KEY0 
tmp(43)  := RCA & ANDOP & "000000001";  
tmp(44)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY0 com a constante 1 MEM[1] 
tmp(45)  := RCA & JEQ & "000111001";  
tmp(46)  := RCA & JSR & "001111111";  
tmp(47)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(48)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(49)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(50)  := RCA & JEQ & "000111101";  
tmp(51)  := RCA & JSR & "010011000";  
tmp(52)  := RCA & LDA & "101100100";      -- Carrega o acumulador com a leitura do botão FPGA_RESET 
tmp(53)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(54)  := RCA & CEQ & "000000001";      -- Compara a leitura de FPGA_RESET com a constante 1 MEM[1] 
tmp(55)  := RCA & JEQ & "000111011";  
tmp(56)  := RCA & JMP & "000101010";  
tmp(57)  := RCA & JSR & "000111111";  
tmp(58)  := RCA & JMP & "000101110";  
tmp(59)  := RCA & JSR & "010001100";  
tmp(60)  := RCA & JMP & "000111000";  
tmp(61)  := RCA & JSR & "010101110";  
tmp(62)  := RCA & JMP & "000110011";  
tmp(63)  := RCA & STA & "111111111";  
tmp(64)  := RCA & LDA & "000001100";  
tmp(65)  := RCA & CEQ & "000000001";  
tmp(66)  := RCA & JEQ & "001111110";      -- Verifica o carry_out 
tmp(67)  := RCA & LDA & "000001000";  
tmp(68)  := RCA & CEQ & "000000001";  
tmp(69)  := RCA & JEQ & "001111110";      -- Verifica o carry_out 
tmp(70)  := RCA & LDA & "000000010";  
tmp(71)  := RCA & SOMA & "000000001";  
tmp(72)  := RCA & CEQ & "000001010";  
tmp(73)  := RCA & JEQ & "001001100";      -- Verifica as unidades 
tmp(74)  := RCA & STA & "000000010";  
tmp(75)  := RCA & JMP & "001111110";  
tmp(76)  := RCA & LDI & "000000000";  
tmp(77)  := RCA & STA & "000000010";  
tmp(78)  := RCA & LDA & "000000011";  
tmp(79)  := RCA & SOMA & "000000001";  
tmp(80)  := RCA & CEQ & "000001010";  
tmp(81)  := RCA & JEQ & "001010100";      -- Verifica as dezenas 
tmp(82)  := RCA & STA & "000000011";  
tmp(83)  := RCA & JMP & "001111110";  
tmp(84)  := RCA & LDI & "000000000";  
tmp(85)  := RCA & STA & "000000011";  
tmp(86)  := RCA & LDA & "000000100";  
tmp(87)  := RCA & SOMA & "000000001";  
tmp(88)  := RCA & CEQ & "000001010";  
tmp(89)  := RCA & JEQ & "001011100";      -- Verifica as centenas 
tmp(90)  := RCA & STA & "000000100";  
tmp(91)  := RCA & JMP & "001111110";  
tmp(92)  := RCA & LDI & "000000000";  
tmp(93)  := RCA & STA & "000000100";  
tmp(94)  := RCA & LDA & "000000101";  
tmp(95)  := RCA & SOMA & "000000001";  
tmp(96)  := RCA & CEQ & "000001010";  
tmp(97)  := RCA & JEQ & "001100100";      -- Verifica as Unidade de Milhares 
tmp(98)  := RCA & STA & "000000101";  
tmp(99)  := RCA & JMP & "001111110";  
tmp(100)  := RCA & LDI & "000000000";  
tmp(101)  := RCA & STA & "000000101";  
tmp(102)  := RCA & LDA & "000000110";  
tmp(103)  := RCA & SOMA & "000000001";  
tmp(104)  := RCA & CEQ & "000001010";  
tmp(105)  := RCA & JEQ & "001101100";      -- Verifica as dezenas de Milhares 
tmp(106)  := RCA & STA & "000000110";  
tmp(107)  := RCA & JMP & "001111110";  
tmp(108)  := RCA & LDI & "000000000";  
tmp(109)  := RCA & STA & "000000110";  
tmp(110)  := RCA & LDA & "000000111";  
tmp(111)  := RCA & SOMA & "000000001";  
tmp(112)  := RCA & CEQ & "000001010";  
tmp(113)  := RCA & JEQ & "001110100";      -- Verifica as centenas de Milhares 
tmp(114)  := RCA & STA & "000000111";  
tmp(115)  := RCA & JMP & "001111110";  
tmp(116)  := RCA & LDI & "000000001";  
tmp(117)  := RCA & STA & "100000010";      -- Ativa o LED de OVERLFOW 
tmp(118)  := RCA & STA & "000001100";      -- Ativa a Flag de OVERFLOW 
tmp(119)  := RCA & LDI & "000001001";  
tmp(120)  := RCA & STA & "000000010";      -- Mantem os valore das unidades em 9 
tmp(121)  := RCA & STA & "000000011";      -- Mantem os valore das dezenas em 9 
tmp(122)  := RCA & STA & "000000100";      -- Mantem os valore das centenas em 9 
tmp(123)  := RCA & STA & "000000101";      -- Mantem os valore das unidades de milhares em 9 
tmp(124)  := RCA & STA & "000000110";      -- Mantem os valore das dezenas de milhares em 9 
tmp(125)  := RCA & STA & "000000111";      -- Mantem os valore das centenas de milhares em 9 
tmp(126)  := RCA & RET & "000000000";  
tmp(127)  := RCA & LDA & "000000010";  
tmp(128)  := RCA & STA & "100100000";      -- Escreve o valor das unidades 
tmp(129)  := RCA & LDA & "000000011";  
tmp(130)  := RCA & STA & "100100001";      -- Escreve o valor das dezenas 
tmp(131)  := RCA & LDA & "000000100";  
tmp(132)  := RCA & STA & "100100010";      -- Escreve o valor das centenas 
tmp(133)  := RCA & LDA & "000000101";  
tmp(134)  := RCA & STA & "100100011";      -- Escreve o valor das unidades de milhares 
tmp(135)  := RCA & LDA & "000000110";  
tmp(136)  := RCA & STA & "100100100";      -- Escreve o valor das dezenas de milhares 
tmp(137)  := RCA & LDA & "000000111";  
tmp(138)  := RCA & STA & "100100101";      -- Escreve o valor das centenas de milhares 
tmp(139)  := RCA & RET & "000000000";  
tmp(140)  := RCA & LDI & "000000000";  
tmp(141)  := RCA & STA & "000000010";      -- Reinicia o Valor das unidades 
tmp(142)  := RCA & STA & "000000011";      -- Reinicia o Valor das dezenas 
tmp(143)  := RCA & STA & "000000100";      -- Reinicia o Valor das centenas 
tmp(144)  := RCA & STA & "000000101";      -- Reinicia o Valor das unidade de milhares 
tmp(145)  := RCA & STA & "000000110";      -- Reinicia o Valor das dezenas de milhares 
tmp(146)  := RCA & STA & "000000111";      -- Reinicia o Valor das centenas de milhares 
tmp(147)  := RCA & STA & "000001000";      -- Reinicia a Flag de Limite 
tmp(148)  := RCA & STA & "000001100";      -- Reinicia a Falg de Overflow(carry_out) 
tmp(149)  := RCA & STA & "100000001";      -- Apaga o Led de Limite 
tmp(150)  := RCA & STA & "100000010";      -- Apaga o Led de Overflow 
tmp(151)  := RCA & RET & "000000000";  
tmp(152)  := RCA & LDA & "000000010";  
tmp(153)  := RCA & CLT & "000001101";  
tmp(154)  := RCA & JLT & "010101101";      -- Verifica as unidades 
tmp(155)  := RCA & LDA & "000000011";  
tmp(156)  := RCA & CLT & "000001110";  
tmp(157)  := RCA & JLT & "010101101";      -- Verifica as dezenas 
tmp(158)  := RCA & LDA & "000000100";  
tmp(159)  := RCA & CLT & "000001111";  
tmp(160)  := RCA & JLT & "010101101";      -- Verifica as centenas 
tmp(161)  := RCA & LDA & "000000101";  
tmp(162)  := RCA & CLT & "000010000";  
tmp(163)  := RCA & JLT & "010101101";      -- Verifica as unidades de milhares 
tmp(164)  := RCA & LDA & "000000110";  
tmp(165)  := RCA & CLT & "000010001";  
tmp(166)  := RCA & JLT & "010101101";      -- Verifica as dezenas de milhares 
tmp(167)  := RCA & LDA & "000000111";  
tmp(168)  := RCA & CLT & "000010010";  
tmp(169)  := RCA & JLT & "010101101";      -- Verifica as centenas de milhares 
tmp(170)  := RCA & LDI & "000000001";  
tmp(171)  := RCA & STA & "000001000";      -- Flag de Limite 
tmp(172)  := RCA & STA & "100000001";      -- LED de Limite 
tmp(173)  := RCA & RET & "000000000";  
tmp(174)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(175)  := RCA & LDI & "000000001";  
tmp(176)  := RCA & STA & "100000000";      -- Liga o LEDR0 
tmp(177)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(178)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(179)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(180)  := RCA & JEQ & "010111101";  
tmp(181)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(182)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(183)  := RCA & CLT & "000001010";  
tmp(184)  := RCA & JLT & "010111011";  
tmp(185)  := RCA & LDI & "000001001";  
tmp(186)  := RCA & STA & "100100000";  
tmp(187)  := RCA & STA & "100100000";  
tmp(188)  := RCA & JMP & "010110001";  
tmp(189)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(190)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(191)  := RCA & CLT & "000001010";  
tmp(192)  := RCA & JLT & "011000011";  
tmp(193)  := RCA & LDI & "000001001";  
tmp(194)  := RCA & STA & "000001101";      -- Guarda o Limite das unidades 
tmp(195)  := RCA & STA & "000001101";  
tmp(196)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(197)  := RCA & LDI & "000000010";  
tmp(198)  := RCA & STA & "100000000";      -- Liga o LEDR1 
tmp(199)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(200)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(201)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(202)  := RCA & JEQ & "011010011";  
tmp(203)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(204)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(205)  := RCA & CLT & "000001010";  
tmp(206)  := RCA & JLT & "011010001";  
tmp(207)  := RCA & LDI & "000001001";  
tmp(208)  := RCA & STA & "100100001";  
tmp(209)  := RCA & STA & "100100001";  
tmp(210)  := RCA & JMP & "011000111";  
tmp(211)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(212)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(213)  := RCA & CLT & "000001010";  
tmp(214)  := RCA & JLT & "011011001";  
tmp(215)  := RCA & LDI & "000001001";  
tmp(216)  := RCA & STA & "000001110";      -- Guarda o Limite das dezenas 
tmp(217)  := RCA & STA & "000001110";  
tmp(218)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(219)  := RCA & LDI & "000000100";  
tmp(220)  := RCA & STA & "100000000";      -- Liga o LEDR2 
tmp(221)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(222)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(223)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(224)  := RCA & JEQ & "011101001";  
tmp(225)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(226)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(227)  := RCA & CLT & "000001010";  
tmp(228)  := RCA & JLT & "011100111";  
tmp(229)  := RCA & LDI & "000001001";  
tmp(230)  := RCA & STA & "100100010";  
tmp(231)  := RCA & STA & "100100010";  
tmp(232)  := RCA & JMP & "011011101";  
tmp(233)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(234)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(235)  := RCA & CLT & "000001010";  
tmp(236)  := RCA & JLT & "011101111";  
tmp(237)  := RCA & LDI & "000001001";  
tmp(238)  := RCA & STA & "000001111";      -- Guarda o Limite das centenas 
tmp(239)  := RCA & STA & "000001111";  
tmp(240)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(241)  := RCA & LDI & "000001000";  
tmp(242)  := RCA & STA & "100000000";      -- Liga o LEDR3 
tmp(243)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(244)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(245)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(246)  := RCA & JEQ & "011111111";  
tmp(247)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(248)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(249)  := RCA & CLT & "000001010";  
tmp(250)  := RCA & JLT & "011111101";  
tmp(251)  := RCA & LDI & "000001001";  
tmp(252)  := RCA & STA & "100100011";  
tmp(253)  := RCA & STA & "100100011";  
tmp(254)  := RCA & JMP & "011110011";  
tmp(255)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(256)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(257)  := RCA & CLT & "000001010";  
tmp(258)  := RCA & JLT & "100000101";  
tmp(259)  := RCA & LDI & "000001001";  
tmp(260)  := RCA & STA & "000010000";      -- Guarda o Limite das unidade de milhares 
tmp(261)  := RCA & STA & "000010000";  
tmp(262)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(263)  := RCA & LDI & "000010000";  
tmp(264)  := RCA & STA & "100000000";      -- Liga o LEDR4 
tmp(265)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(266)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(267)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(268)  := RCA & JEQ & "100010101";  
tmp(269)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(270)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(271)  := RCA & CLT & "000001010";  
tmp(272)  := RCA & JLT & "100010011";  
tmp(273)  := RCA & LDI & "000001001";  
tmp(274)  := RCA & STA & "100100100";  
tmp(275)  := RCA & STA & "100100100";  
tmp(276)  := RCA & JMP & "100001001";  
tmp(277)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(278)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(279)  := RCA & CLT & "000001010";  
tmp(280)  := RCA & JLT & "100011011";  
tmp(281)  := RCA & LDI & "000001001";  
tmp(282)  := RCA & STA & "000010001";      -- Guarda o Limite das dezenas de milhares 
tmp(283)  := RCA & STA & "000010001";  
tmp(284)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(285)  := RCA & LDI & "000100000";  
tmp(286)  := RCA & STA & "100000000";      -- Liga o LEDR5 
tmp(287)  := RCA & LDA & "101100001";      -- Carrega o acumulador com a leitura do botão KEY1 
tmp(288)  := RCA & ANDOP & "000000001";      -- Aplica mascara 
tmp(289)  := RCA & CEQ & "000000001";      -- Compara a leitura de KEY1 com a constante 1 MEM[1] 
tmp(290)  := RCA & JEQ & "100101011";  
tmp(291)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(292)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(293)  := RCA & CLT & "000001010";  
tmp(294)  := RCA & JLT & "100101001";  
tmp(295)  := RCA & LDI & "000001001";  
tmp(296)  := RCA & STA & "100100101";  
tmp(297)  := RCA & STA & "100100101";  
tmp(298)  := RCA & JMP & "100011111";  
tmp(299)  := RCA & LDA & "101000000";      -- Leitura SW 
tmp(300)  := RCA & ANDOP & "000001011";      -- Aplica mascara SW0~SW3 
tmp(301)  := RCA & CLT & "000001010";  
tmp(302)  := RCA & JLT & "100110001";  
tmp(303)  := RCA & LDI & "000001001";  
tmp(304)  := RCA & STA & "000010010";      -- Guarda o Limite das centenas de milhares 
tmp(305)  := RCA & STA & "000010010";  
tmp(306)  := RCA & LDI & "000000000";  
tmp(307)  := RCA & STA & "100100000";      -- Limpa o HEX0 
tmp(308)  := RCA & STA & "100100001";      -- Limpa o HEX1 
tmp(309)  := RCA & STA & "100100001";      -- Limpa o HEX2 
tmp(310)  := RCA & STA & "100100010";      -- Limpa o HEX3 
tmp(311)  := RCA & STA & "100100011";      -- Limpa o HEX4 
tmp(312)  := RCA & STA & "100000000";      -- Limpa o HEX5 
tmp(313)  := RCA & STA & "111111110";      -- Limpa a leitura do KEY1 
tmp(314)  := RCA & RET & "000000000";  
return tmp;